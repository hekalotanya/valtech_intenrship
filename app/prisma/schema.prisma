generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id       Int      @id @default(autoincrement())
  role     String   @default("member")
  name     String   @db.VarChar(255)
  email    String   @unique @db.VarChar(255)
  phone    String?   @db.VarChar(255)
  password String?
  Review   Review[]
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String    @db.Char(255)
  products Product[]
}

model Product {
  id            Int             @id @default(autoincrement())
  name          String
  last_price    Int
  price         Int
  category      Category        @relation(fields: [category_id], references: [id])
  color         String          @db.VarChar(255)
  size          Int
  description   String
  images        Image[]
  sale          Boolean
  best_seller   Boolean
  category_id   Int
  reviews       Review[]
  order_product Order_product[]
}

model Image {
  id         Int      @id @default(autoincrement())
  product    Product? @relation(fields: [product_id], references: [id])
  path       String
  product_id Int
}

model Review {
  id         Int     @id @default(autoincrement())
  user_id    Int
  user       User    @relation(fields: [user_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
  body       String
  product_id Int
}

model Order {
  id          Int             @id @default(autoincrement())
  user_id     Int?
  user_name   String
  user_adress String
  user_phone  String
  user_email  String
  products    Order_product[]
  total_price   Int
  date        String
}

model Order_product {
  id         Int     @id @default(autoincrement())
  product_id Int
  order      Order   @relation(fields: [order_id], references: [id])
  product    Product @relation(fields: [product_id], references: [id])
  order_id    Int
  count      Int
}
